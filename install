#!/usr/bin/env bash

#===============================================================================================
# PRE-LAUNCH SETUP
#===============================================================================================

logger # logs

#-----------------------------------------------------------------------------------------------
# SOURCES
# - General Helper Functions
# - Global Environment Variables
# - CLI Argument Options
for file in ./bin/*; do 
    source $file
done

#-----------------------------------------------------------------------------------------------
# HANDLE CLI OPTIONS
handle_getopts "$@"

#===============================================================================================
# START RUNNING SETUP
#===============================================================================================
welcome

header

#-----------------------------------------------------------------------------------------------
# SYSTEM SETUP

/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

message "Done installing Homebrew."
sleep 2

#-----------------------------------------------------------------------------------------------
# FULL INSTALL
# - Install all Formulae, Taps, and Mac Apps specified by $BREW_FILE 
if [ "$SETUP_MODE" = "FULL" ]; then
    echo "| INSTALLING EVERYTHING IN '${BREW_FILE}'"
    echo -e "================================================================================\n"
    brew bundle --file ${BREW_FILE}

#-----------------------------------------------------------------------------------------------
# ESSENTIALS INSTALL
# - Homebrew Taps specified by $BREW_TAPS_FILE
# - Homebrew Forlumae specified by $BREW_FORMULAE_FILE
# - Homebrew Casks specified by $BREW_CASKS_FILE
# - applications from Mac App Store specified by $MAC_APPS_FILE
elif [ "$SETUP_MODE" = "ESSENTIALS" ]; then
    echo "| INSTALLING HOMEBREW TAPS, FORMULAE, AND CASKS"
    echo -e "================================================================================\n"

    echo "Adding Homebrew Taps"
    echo -e "--------------------------------------------------------------------------------\n"
    while read -r tap; do
        echo "Adding tap $tap"
        brew tap $tap
    done < $BREW_TAPS_FILE
    message "Done adding Homebrew taps."
    sleep 2

    echo "Installing Homebrew Formulae"
    echo -e "--------------------------------------------------------------------------------\n"
    while read -r formula; do
        echo "Installing $formula"
        brew install $formula
        echo ""
    done < $BREW_FORMULAE_FILE
    message "Done installing Homebrew formulae."
    sleep 2

    echo "Installing Casks (3rd party apps)"
    echo -e "--------------------------------------------------------------------------------\n"
    while read -r cask; do
        echo "Installing $cask"
        brew cask install $cask
        echo ""
    done < $BREW_CASKS_FILE
    message "Done installing casks."
    sleep 2

    echo "Installing Apps From Mac App Store"
    echo -e "--------------------------------------------------------------------------------\n"
    mas signin --dialog $(getAccountId)

    for app in $(sed -E -n 's/^([0-9]+)(.*)/\1/p' ${MAC_APPS_FILE}); do
        echo "Installing $app"
        mas install $app
        echo ""
    done
    message "Done installing Mac App Store apps."
    sleep 2

#-----------------------------------------------------------------------------------------------
# ERROR: INSTALL MODE NOT SUPPORTED
else
    msg error "Something is terribly wrong. ${SETUP_MODE} should have never passed."
    exit 1
fi

#-----------------------------------------------------------------------------------------------
# INSTALL CORE RESOURCES
echo "| INSTALLING CORE RESOURCES"
echo -e "================================================================================\n"

echo "Installing Global NPM Packages"
echo -e "--------------------------------------------------------------------------------\n"
# brew link --force node@10  # link keg-only package if installing node v10
npm install -g @angular/cli bunyan eslint aws-azure-login

message_subsection "Installing VS Code Extensions"
code --install-extension Shan.code-settings-sync

#-----------------------------------------------------------------------------------------------
# CLEANUP
echo "\n\n| CLEANING UP"
echo -e "================================================================================"

echo -e "Turning OFF sending brew analytics\n"
brew analytics off

echo -e "Cleaning up Homebrew downloads and caches\n"
brew cleanup -s # remove older versions in cellar + old downloads-cache
rm -rf $(brew --cache) # delete all

message "Done cleaning up."
sleep 2

#===============================================================================================
# COMPLETED
#===============================================================================================
footer "Primary"

#-----------------------------------------------------------------------------------------------
# SECONDARY INSTALL
if [ "$RUN_SECONDARY" = true ]; then 
    echo "Runnig Secondary Install"
    echo -e "--------------------------------------------------------------------------------\n"
    # Execute secondary script in the current shell without forking a sub shell
    . ./secondary
else 
    echo "Now go login to accounts (Dropbox, emails, etc...) and then run secondary installs, \`bash secondary\`."
    echo ""
fi