#!/usr/bin/env bash

#===============================================================================================
# COMMAND LINE OPTIONS
#===============================================================================================

# Global Variables
source ${PARENT_PATH}/lib/globals

#-----------------------------------------------------------------------------------------------
# HELPER FUNCTIONS

# Handle CLI Arguments
handle_arguments() {
    # Set Additional Defaults
    if [ $# -ne 0 ]; then
        BREW_FILE=${1}
        echo "Using Brewfile '${BREW_FILE}'"
    fi
}

# Bash Builtin Getopts
handle_getopts() {
    OPTIONS=":BDEFhi:m:s"

    # No Arguments Runs MAIN Install
    if [ $# -eq 0 ]; then
        RUN_SECONDARY=true
    fi

    # Handle Options
    while getopts ${OPTIONS} option; do
        case "${option}" in
        B)
            RESTORE_BACKUP=true
            ;;
        D)
            DEFAULTS=true
            ;;
        F)
            DEFAULTS=true
            RESTORE_BACKUP=true
            SET_DEFAULT_SYSTEM_PREFERENCES=true
            SETUP_TYPE="MAIN"
            ;;
        E)
            SETUP_TYPE="ESSENTIALS"
            ;;
        M)
            # Global Default: SETUP_TYPE="MAIN"
            RUN_SECONDARY=true
            ;;
        P)
            SET_DEFAULT_SYSTEM_PREFERENCES=true
            ;;
        i)
            SETUP_TYPE=$(echo ${OPTARG} | tr [:lower:] [:upper:])
            case "${SETUP_TYPE}" in
                MAIN)
                    # Global Default: SETUP_TYPE="MAIN"
                    RUN_SECONDARY=true
                    ;;
                ESSENTIALS)
                    ;;
                *)
                    echo "Incorrect option provided for -i: ${OPTARG}"
                    usage
                    ;;
            esac
            ;;
        m)
            # If additional mode indicated, set globals
            MODE=$(echo ${OPTARG} | tr [:upper:] [:lower:])
            if [ -n "${MODE}" ]; then
                MODE_SOURCE_PATH="${MODE_DIR_PATH}${MODE}/"
                MODE_INSTALL_FILE="${MODE_SOURCE_PATH}install.sh"
                MODE_BREW_FILE="${MODE_SOURCE_PATH}Brewfile"
            fi
            ;;
        s)
            RUN_SECONDARY=true
            ;;
        \?)
            echo "Invalid Option: -${OPTARG}"
            usage
            ;;
        :)
            echo "Invalid Option: -${OPTARG} requires an argument"
            usage
            ;;
        h | *)
            usage
            ;;
        esac
    done

    shift $((OPTIND -1)) # remove options already handled by getopts from $@

    handle_arguments "$@"
}

# Prettify Options Output Message
print_option() {
    printf "\t%s\t%s\n" "${1}" "${2}" | expand -t 4,28
}

# Usage Message
usage() {
    echo -e "\nUsage: $(basename "$0") [Options] Brewfile\n"
    echo -e "\nRunning install without any options below will run a MAIN setup by default.\n"
    echo -e "\nOptions:\n"
    print_option "-B" "Sync backups from latest Time Machine backup"
    print_option "-D" "Use defaults (skip confirmation when applying secondary settings)"
    print_option "-E" "Essentials only installations"
    print_option "-F" "Run full main install with defaults (Sets -B, -D, -S, and -s)"
    print_option "-M" "Main install setup (-s=true)"
    print_option "-S" "Set Mac setting system preference defaults (Default: false)"
    print_option "-i [main|essentials]" "Explicit install type declaration, i.e. -M or -E)"
    print_option "-m <mode>" "Run additional specified mode installation"
    print_option "-s" "Run secondary installation (Default: false)"
    print_option "-h" "Prints this usage message"
    echo -e "\nArguments:\n"
    print_option "Brewfile" "Path to Brew bundle file (Default: '${BREW_FILE}')"
    echo -e "\n"
    1>&2
    exit 1
}
