#!/usr/bin/env bash

#===============================================================================================
# HELPER FUNCTIONS
#===============================================================================================

# Global Variables
BASE_PATH="$(dirname $(dirname $0))"
source ${BASE_PATH}/lib/globals

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Divider Block Divider
divider() {
    echo -e "\n\n${1}\n--------------------------------------------------------------------------------\n"
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Get Apple ID Username (email)
getAccountId() {
    defaults read MobileMeAccounts Accounts | sed -n -e 's/.*AccountID = \"\(.*\)\"\;/\1/p'
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Completed Message
footer() {
    echo ""
    echo ""
    echo "================================================================================"
    echo "| ${1} setup has FINISHED"
    echo "| Script:    $(basename "$0")"
    echo "| User:      `whoami`"
    echo "| Date:      `date`"
    echo "| PWD:       `pwd`"
    echo "| PID:       $$"
    echo "================================================================================"
    echo ""
    echo ""
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Header Message
header() {
    echo ""
    echo ""
    echo "================================================================================"
    echo "| Script:    $(basename "$0")"
    echo "| User:      `whoami`"
    echo "| Date:      `date`"
    echo "| PWD:       `pwd`"
    echo "| PID:       $$"
    echo "|"
    echo "| Running '${SETUP_MODE}' install..."
    echo "|     - Brewfile: ${BREW_FILE}"
    echo "|     - Secondary: $(if [ ${RUN_SECONDARY} = "true" ]; then echo "Yes"; else echo "No"; fi)"
    echo "|"
    echo "================================================================================"
    echo ""
    echo ""
    echo ""
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Logs
# - The first line redirects and appends (-a) everything from the standard ouput stream to the logfile and prints it to the screen.
# - The second line redirects the standard error to log file.
loggers() {
    exec 1>> >(tee -a setup.log)
    exec 2>> error.log
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Completion Messages
# - Display Nicely Formatted Message
message() {
    if [ "$1" = "info" ]; then
        local msg="\n\n${EMOJI_INFO} - ${RED}${2}${NC}\n\n\n"
    elif [ "$1" = "warning" ]; then
        local msg="\n\n${EMOJI_WARNING} - ${RED}${2}${NC}\n\n\n"
    elif [ "$1" = "fail" ]; then
        local msg="\n\n${EMOJI_FAIL} - ${RED}${2}${NC}\n\n\n"
    elif [ "$1" = "error" ]; then
        local msg="\n\n${EMOJI_ERROR} - ${RED}${2}${NC}\n\n\n"
    else
        local msg="\n\n${EMOJI_CHECKMARK} - ${GREEN}${1}${NC}\n\n\n"
    fi

    shift
    printf "${msg}"
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Section Header
section() {
    echo -e "\n\n| ${1}\n================================================================================\n\n"
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Subs Section Header
subsection() {
    echo -e "\n\n${1}\n--------------------------------------------------------------------------------\n"
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Sources
# - General Helper Functions
# - Global Environment Variables
# - CLI Argument Options
source_libs() {
    for file in ./lib/*; do 
        source $file
    done
}

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Welcome Message
welcome() {
    m[0]="\n${YELLOW}  ___  ____  ____  __  __  ____\n"
    m[1]="/ __)( ___)(_  _)(  )(  )(  _ \\ \n"
    m[2]="\__ \ )__)   )(   )(__)(  )___/\n"
    m[3]="(___/(____) (__) (______)(__)\n${NC}\n"

    echo -e "${m[@]}"
    echo -e "This script will automate a lot of processes.\n"
    echo -e "Though not recommended to interrupt, exit this script at any time with Ctrl-C.\n"
    sleep 2
    echo -e "Press Ctrl-C to STOP ${EMOJI_STOP} now if you don't wish to proceed. Starting in 5 seconds...\n"
    sleep 5
    echo -e "Starting automated install: ${SETUP_MODE}\n"
}