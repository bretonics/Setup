#!/usr/bin/env bash

#===============================================================================================
# PRE-LAUNCH SETUP
#===============================================================================================

SETUP_PWD=`pwd`

# Only execute when running independently of initial install
if [ -z $RUN_SECONDARY ] || [ $RUN_SECONDARY = false ]; then 
    loggers
    source_libs
fi

#-----------------------------------------------------------------------------------------------
# SOURCES
# - General Helper Functions
# - Global Environment Variables
# - CLI Argument Options
for file in ./bin/*; do 
    source $file
done

#===============================================================================================
# START RUNNING SECONDARY SETUP
#===============================================================================================
header

cd ~
exit

#-----------------------------------------------------------------------------------------------
# SYSTEM PERSONALIZATION
section "RUNNING SYSTEM PERSONALIZATIONS"

echo -e "Downloading Submodules\n"
git pull --recurse-submodules

echo -e "\nCopying .bash_profile\n"
cp ./files/bash/profile/.bash_profile ~/

echo -e "\nCopying .bashrc\n"
cp ./files/bash/bashrc/.bashrc ~/

echo -e "\nCopying .bash_functions\n"
cp ./files/bash/functions/.bash_functions ~/

echo -e "\nInitializing crontab\n"
crontab ./files/crontab/crontab

echo -e "\nSourcing .bash_profile\n"
source ~/.bash_profile

echo -e "\nLinking and Sourcing all Bash Completions\n"
ln -s /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash /usr/local/etc/bash_completion.d/
for f in /usr/local/etc/bash_completion.d/*; do source $f; done

echo -e "\nReducing Dock autohide animation\n"
defaults write com.apple.dock autohide-time-modifier -float 0.25; killall Dock

echo -e "\nRemove Dock Delay for Auto-Hide & Auto-Show\n"
defaults write com.apple.Dock autohide-delay -float 0 && killall Dock

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 3RD PARTY
echo -e "\nSymlinking Atom config directory\n"
rm -rf ~/.atom
ln -sf ~/Dropbox/Apps/Atom ~/.atom

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# GIT
subsection "Configuring Git"

# git config --global pull.rebase true
read -p "Enter your name for Git: " GIT_NAME
git config --global user.name "${GIT_NAME}"
read -p "Enter your email for Git: " GIT_EMAIL
git config --global user.email "${GIT_EMAIL}"

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# SSH KEYS
subsection "Configuring SSH Keys"

cd ~
mkdir ~/.ssh
cp -v ./files/config ~/.ssh
ssh-keygen -t rsa -f ~/.ssh/${GITHUB_RSA_NAME}
cat ~/.ssh/${GITHUB_RSA_NAME}.pub | pbcopy

echo -e "\n\nSSH public key copied to clipboard.\n"
echo -e "\nGitHub will now open. Paste PUBLIC SSH key copied to your clipboard and come back here to continue.\n"
sleep 3
open ${GITHUB_KEYS_URL}
read -p "Waiting on user to return. Press to continue... "
pbcopy < /dev/null  # clear clipboard

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# GGP Key
subsection "Creating GPG Key"

gpg --gen-key
GPGkey=$(gpg --list-secret-keys --keyid-format LONG | sed -nE 's/sec.*rsa2048\/([a-zA-Z0-9]+).*/\1/p')

echo -e "\nConfiguring GPG Key with resources\n"
git config --global user.signingkey ${GPGkey}  # configure Git to use GPG
gpg --armor --export ${GPGkey} | pbcopy

echo -e "\n\nGPG key copied to clipboard.\n"
unset GPGkey
echo -e "GitHub will now open. Paste GPG key copied to your clipboard and come back here to continue.\n"
sleep 3
open ${GITHUB_KEYS_URL}
read -p "Waiting on user to return. Press to continue... "
pbcopy < /dev/null  # clear clipboard

message "Done running workspace personalizations."
sleep 2

#===============================================================================================
# UPDATES
#===============================================================================================
section "RUNNING UPDATES"

subsection "Updating macOS"
softwareupdate -ia --verbose

subsection "Updating Atom"
apm upgrade -c false

message "Done running updates."
sleep 2

#===============================================================================================
# COMPLETED
#===============================================================================================
footer "Secondary"
